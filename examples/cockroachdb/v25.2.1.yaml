apiVersion: v1
kind: Namespace
metadata:
  name: crdb
  labels:
    name: crdb

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: cockroachdb
  namespace: crdb
  labels:
    app: cockroachdb

---

apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cockroachdb
  namespace: crdb
  labels:
    app: cockroachdb
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get

---

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cockroachdb
  namespace: crdb
  labels:
    app: cockroachdb
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cockroachdb
subjects:
- kind: ServiceAccount
  name: cockroachdb
  namespace: default

---

apiVersion: v1
kind: Service
metadata:
  name: cockroachdb-public
  namespace: crdb
  labels:
    app: cockroachdb
spec:
  ports:
  - port: 26257
    targetPort: 26257
    protocol: TCP
    name: grpc
  - port: 8080
    targetPort: 8080
    name: http
  selector:
    app: cockroachdb
  type: LoadBalancer

---

apiVersion: v1
kind: Service
metadata:
  name: cockroachdb
  namespace: crdb
  labels:
    app: cockroachdb
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  ports:
  - port: 26257
    targetPort: 26257
    name: grpc
  - port: 8080
    targetPort: 8080
    name: http
  publishNotReadyAddresses: true
  clusterIP: None
  selector:
    app: cockroachdb

---

apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: cockroachdb-budget
  namespace: crdb
  labels:
    app: cockroachdb
spec:
  selector:
    matchLabels:
      app: cockroachdb
  maxUnavailable: 1

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: crdb-config
  namespace: crdb
data:
  logs.yaml: |
    file-defaults:
      buffered-writes: false
      auditable: false

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: cockroachdb
  namespace: crdb
spec:
  serviceName: "cockroachdb"
  replicas: 3
  minReadySeconds: 10
  selector:
    matchLabels:
      app: cockroachdb
  template:
    metadata:
      labels:
        app: cockroachdb
    spec:
      serviceAccountName: cockroachdb
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - cockroachdb
                topologyKey: kubernetes.io/hostname
      containers:
        - name: cockroachdb
          image: cockroachdb/cockroach:v25.2.1
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: "2"
              memory: "1Gi"
            limits:
              cpu: "3"
              memory: "2Gi"
          ports:
            - containerPort: 26257
              name: grpc
            - containerPort: 8080
              name: http
          readinessProbe:
            httpGet:
              path: "/health?ready=1"
              port: http
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 5
            failureThreshold: 2
          volumeMounts:
            - name: datadir
              mountPath: /cockroach/cockroach-data
            - name: failover
              mountPath: /cockroach/cockroach-failover
            - name: config-volume
              mountPath: /cockroach/config
          command:
            - "/bin/bash"
            - "-ecx"
            - exec
              /cockroach/cockroach
              start
              --insecure
              --advertise-host $(hostname -f)
              --http-addr 0.0.0.0
              --join cockroachdb-0.cockroachdb.crdb,cockroachdb-1.cockroachdb.crdb,cockroachdb-2.cockroachdb.crdb
              --store=path=/cockroach/cockroach-data
              --wal-failover=path=/cockroach/cockroach-failover
              --log-config-file=/cockroach/config/logs.yaml
              --cache 128MiB
              --max-sql-memory 256MiB
      terminationGracePeriodSeconds: 60
      volumes:
        - name: datadir
          persistentVolumeClaim:
            claimName: datadir
        - name: failover
          persistentVolumeClaim:
            claimName: failover
        - name: config-volume
          configMap:
            name: crdb-config
            items:
              - key: logs.yaml
                path: logs.yaml
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
    - metadata:
        name: datadir
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: 10Gi
    - metadata:
        name: failover
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: 1Gi